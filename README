GIT

Ви можете побачити версію Git'а, яку ви встановили: 
$ git --version

Детальну довідкову інформацію у вигляді man-сторінки можна отримати про будь-яку підкоманду, виконавши: 
$ git help [subcommand]

Наприклад: 
$ git help status

Якщо ви не можете втриматися від перегляду повнішого набору команд, це можна зробити ось так: 
$ git help --all

Якщо ви створюєте новий репозиторій, найпростіший спосіб зробити це з самого початку - зробити щось на кшталт:
$ git init
$ git checkout -b main

Для вже наявних репозиторіїв ви можете перейменувати як локальну гілку, так і віддалену гілку на сервері з:

$ git checkout master
# Змінити локальну назву
$ git branch -m master main

# Змінити віддалену назву
$ git push -u origin main
$ git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main

# Підтвердити імена!
$ git branch -a

Залежно від налаштувань віддаленого сервера (наприклад, GitHub) це може спрацювати, а може і не спрацювати. Простіший підхід - не видаляти гілку master, а просто скопіювати її в main і працювати звідти, як і раніше:

$ git checkout master
$ git branch main
$ git checkout main
$ git push -u origin main

а потім просто ігноруйте гілку master надалі. 

Під час ініціалізації проєкту створюється каталог .git, який міститиме всю інформацію про керування версіями. Основні каталоги, що входять до складу проєкту, залишаються недоторканими. 

Початковий вміст цього каталогу має вигляд:

$ ls -l .git

Далі ми створюємо файл і додаємо його до проєкту:

​$ echo some junk > somejunkfile
$ git add somejunkfile

Ми можемо бачити поточний стан нашого проєкту за допомогою:

​$ git status

Тепер давайте змінимо файл, а потім подивимося історію відмінностей:

​$ echo another line >> somejunkfile
$ git diff

Для того, щоб фактично закоммітити зміни в репозиторії, ми це робимо: 

$ git add somejunkfile
$ git commit -m "My initial commit"